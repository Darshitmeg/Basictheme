/* #Newsletter
================================================== */
.newsletter {
  margin: 0px auto;
  max-width: 640px;
}

.input-row {
  display: flex;
  flex-wrap: wrap;
  margin-left: -5px;
  margin-right: -5px;
  width: 100%;
}
@media only screen and (max-width: 798px) {
  .input-row {
    flex-direction: column;
    margin-left: 0px;
    margin-right: 0px;
  }
}
.input-row input {
  flex-basis: 0;
  flex-grow: 1;
  flex-shrink: 1;
  max-height: 40px;
}
@media only screen and (max-width: 1024px) {
  .input-row input {
    margin: 5px 0;
  }
}
.input-row input.newsletter-form__sign-up {
  display: inline-block;
  flex: none;
  max-height: 44px;
}
@media only screen and (max-width: 798px) {
  .input-row input.newsletter-form__sign-up {
    width: 100%;
  }
}

.newsletter-both-names--true input.firstName {
  margin-right: 5px;
}

/* Newsletter popup */
.js-newsletter-popup {
  display: none;
}

.newsletter__lightbox .fancybox-content {
  width: 100%;
  max-width: 740px;
  padding: 0;
}
{%- if settings.use_newsletter_border == true -%}
.newsletter__lightbox .fancybox-content {
  border: 5px solid {{ settings.border_color }};
}
{%- endif -%}

{%- if settings.newsletter_popup_image_align == 'right' -%}

.newsletter__lightbox .fancybox-close-small {
  left: 0;
}

{%- endif -%}
@media only screen and (max-width: 480px) {
  .newsletter__lightbox .fancybox-close-small {
    display: block;
  }
}
@media only screen and (max-width: 798px) {
  .newsletter__lightbox .fancybox-close-small svg path {
    fill: white;
  }
}
{%- if settings.newsletter_popup_close == false -%}
.newsletter__lightbox .fancybox-close-small {
  display: none;
}
{%- endif -%}

.newsletter__lightbox .fancybox-toolbar {
  display: none;
}

.newsletter-popup {
  display: flex;
  background-color: {{ settings.newsletter_popup_background_color }};
  padding: 0;
  width: 100%;
}
{%- if settings.newsletter_popup_image_align == 'right' -%}
.newsletter-popup {
  flex-direction: row-reverse;
}
{%- endif -%}
@media only screen and (max-width: 798px) {
  .newsletter-popup {
    line-height: 0;
    flex-direction: column;
  }
}

@media only screen and (min-width: 799px) and (max-width: 1024px) {
  .popup-signup-show--true input.newsletter-form__sign-up {
    margin-left: 0px;
  }
}

.popup-signup-show--false {
  display: none;
}

.newsletter-both-names--false .newsletter input[type=text] {
  width: 100%;
}

.newsletter-img {
  width: 40%;
}
@media only screen and (max-width: 798px) {
  .newsletter-img {
    width: 100%;
  }
}
.newsletter-img img {
  width: 100%;
  display: block;
}

.newsletter-info {
  text-align: {{ settings.newsletter_popup_text_align }};
  color: {{ settings.newsletter_popup_color }};
  background-color: {{ settings.newsletter_popup_background_color }};
  height: auto;
  float: left;
}
@media only screen and (max-width: 798px) {
  .newsletter-info {
    padding: 20px;
    width: 100% !important;
    position: relative;
  }
}
.newsletter-info input.contact_email[type=email] {
  width: 65%;
  float: left;
}
@media only screen and (max-width: 1024px) {
  .newsletter-info input.contact_email[type=email] {
    width: 100%;
  }
}
.newsletter-info #contact_form input.newsletter-form__sign-up[type=submit] {
  width: calc(35% - 10px);
}
@media only screen and (max-width: 1024px) {
  .newsletter-info #contact_form input.newsletter-form__sign-up[type=submit] {
    width: 100%;
  }
}
.newsletter-info .input-row {
  margin-right: 0;
  margin-left: 0;
}
.newsletter-info .popup-signup-show--true {
  margin-top: 20px;
}

.newsletter-image--true .newsletter-popup__content {
  width: 60%;
  display: flex;
  align-items: center;
  justify-content: center;
}
@media only screen and (max-width: 798px) {
  .newsletter-image--true .newsletter-popup__content {
    width: 100%;
    display: block;
  }
}
@media only screen and (min-width: 1025px) {
  .newsletter-image--true {
    max-height: 875px;
  }
}

@media only screen and (min-width: 1025px) {
  .newsletter-image--true.object-fit--none {
    height: auto;
  }
}

.newsletter-image--false {
  justify-content: center;
}
.newsletter-image--false .newsletter-info {
  width: 100%;
  position: relative;
  height: auto;
  float: none;
}

.align-left .newsletter-info {
  right: 0;
}

.newsletter-description h2 {
  color: {{ settings.newsletter_popup_color }};
  margin-top: 0;
}

.newsletter-description {
  padding: 40px;
  margin: 0 auto;
}
@media only screen and (max-width: 798px) {
  .newsletter-description {
    font-size: inherit;
    width: auto;
  }
}
@media only screen and (max-width: 480px) {
  .newsletter-description {
    padding: 20px;
  }
}
@media only screen and (min-width: 1025px) {
  .newsletter-description {
    min-width: 350px;
  }
}
@media only screen and (min-width: 1401px) {
  .newsletter-description {
    font-size: inherit;
  }
}

.newsletter-popup__button {
  margin-top: 10px;
  margin-bottom: 0;
}
{%- if settings.newsletter_popup_text_align == 'left' -%}
.newsletter-popup__button {
  margin-right: 15px;
}
{%- elsif settings.newsletter_popup_text_align == 'right' -%}
.newsletter-popup__button {
  margin-left: 15px;
}
{%- else -%}
.newsletter-popup__button {
  margin-left: 8px;
  margin-right: 8px;
}
{%- endif -%}
@media only screen and (max-width: 480px) {
  .newsletter-popup__button {
    margin-top: 5px;
  }
}

.newsletter-popup__button--text {
  --button-color-border: {{ settings.newsletter_popup_color }};
    --button-color-background: transparent;
    --button-color-text: {{ settings.newsletter_popup_color }};
    --button-color-border-hover: {{ settings.newsletter_popup_color }};
    --button-color-background-hover: {{ settings.newsletter_popup_color }};
    --button-color-text-hover: {{ settings.newsletter_popup_background_color }};
  }

  {% assign morph_base_color = settings.newsletter_popup_color %}
  {% capture newsletter_popup_color_morphed %}{% comment %}Inject morph begin{% endcomment %}
  {%- capture _ -%}
  {% comment %}
  This adjusts the color to give it an appropriate difference from the original color.
  It is usually used for link hover color, and things where we need to distinguish a change.

  @param morph_base_color {Color}
  The origin color to morph

  @param morph_adjustment {Number}
  The number to multiply the lightness and saturation by. Default 2.
  {% endcomment %}

  {% if morph_adjustment == blank %}
  {% assign morph_adjustment = 2 %}
  {% endif %}

  {% assign morph_adjustment = morph_adjustment | times: 1.0 %}

  {% assign color_lightness = morph_base_color | color_extract: 'lightness' %}

  {% if color_lightness > 20.0 %}
  {% if color_lightness > 50.0 %}
  {% assign light_adjustment = color_lightness | divided_by: 25.0 | times: morph_adjustment %}
  {% else %}
  {% assign light_adjustment = color_lightness | divided_by: 15.0 | times: morph_adjustment %}
  {% endif %}
  {% assign new_color = morph_base_color | color_darken: light_adjustment %}
  {% else %}
  {% if color_lightness < 7.0 %}
  {% assign light_adjustment = 3.0 | times: morph_adjustment %}
  {% assign new_color = morph_base_color | color_desaturate: 45.0 %}
  {% elsif color_lightness < 12.0 %}
  {% assign light_adjustment = 2.25 | times: morph_adjustment %}
  {% assign new_color = morph_base_color | color_desaturate: 15.0 %}
  {% else %}
  {% assign light_adjustment = 1.75 | times: morph_adjustment %}
  {% assign new_color = morph_base_color %}
  {% endif %}
  {% assign new_color = new_color | color_lighten: light_adjustment %}
  {% endif %}
  {% assign morph_base_color = blank %}
  {% assign morph_adjustment = blank %}
  {%- endcapture -%}
  {{ new_color }}
  {% comment %}Inject morph end{% endcomment %}
  {% endcapture %}
  .newsletter-popup__button--highlighted {
    --button-color-border: {{ settings.newsletter_popup_color }};
      --button-color-background: {{ settings.newsletter_popup_color }};
      --button-color-text: {{ settings.newsletter_popup_background_color }};
      --button-color-border-hover: {{ newsletter_popup_color_morphed }};
      --button-color-background-hover: {{ newsletter_popup_color_morphed }};
      --button-color-text-hover: {{ settings.newsletter_popup_background_color }};
    }









    .fancybox-is-open div:empty{
      display:block;
    }
    body.gradient.fancybox-active.compensate-for-scrollbar {
      display: unset;
    }